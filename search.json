[
  {
    "objectID": "io.core.html",
    "href": "io.core.html",
    "title": "kedro",
    "section": "",
    "text": "validate_on_forbidden_chars\n\n validate_on_forbidden_chars (**kwargs)\n\nValidate that string values do not include white-spaces or ;\n\n\n\nget_filepath_str\n\n get_filepath_str (path:pathlib.PurePath, protocol:str)\n\nReturns filepath. Returns full filepath (with protocol) if protocol is HTTP(s).\n\n\n\nget_protocol_and_path\n\n get_protocol_and_path (filepath:str, version:__main__.Version=None)\n\nParses filepath on protocol and path.\n\n\n\nAbstractVersionedDataSet\n\n AbstractVersionedDataSet (filepath:pathlib.PurePosixPath,\n                           version:Optional[__main__.Version],\n                           exists_function:Callable[[str],bool]=None,\n                           glob_function:Callable[[str],List[str]]=None)\n\nAbstractVersionedDataSet is the base class for all versioned data set\n\n\nparse_dataset_definition\n\n parse_dataset_definition (config:Dict[str,Any], load_version:str=None,\n                           save_version:str=None)\n\nParse and instantiate a dataset class using the configuration provided.\n\n\n\n\nVersion\n\n Version (load, save)\n\nThis namedtuple is used to provide load and save versions for versioned\n\n\ngenerate_timestamp\n\n generate_timestamp ()\n\nGenerate the timestamp to be used by versioning.\n\n\n\n\nAbstractDataSet\n\n AbstractDataSet ()\n\nAbstractDataSet is the base class for all data set implementations.\n\n\n\nVersionNotFoundError\nVersionNotFoundError raised by AbstractVersionedDataSet implementations\n\n\n\nDataSetAlreadyExistsError\nDataSetAlreadyExistsError raised by DataCatalog class in case\n\n\n\nDataSetNotFoundError\nDataSetNotFoundError raised by DataCatalog class in case of\n\n\n\nDataSetError\nDataSetError raised by AbstractDataSet implementations"
  },
  {
    "objectID": "utils.html",
    "href": "utils.html",
    "title": "kedro",
    "section": "",
    "text": "load_obj\n\n load_obj (obj_path:str, default_obj_path:str='')\n\nExtract an object from a given path."
  },
  {
    "objectID": "card.html",
    "href": "card.html",
    "title": "card – Basic Playing Card",
    "section": "",
    "text": "foo\n\n foo ()\n\n\na = Card(suit=1, rank=3)\na\n\n3♦️\n\n\n\nb = CardAttrs(suit=1, rank=3)\nb\n\nCardAttrs(suit=1, rank=3)\n\n\n\nc = CardDataclass(suit=1, rank=3)\nc\n\nCardDataclass(suit=1, rank=3)\n\n\n\n\n\nCard\n\n Card (suit, rank)\n\nPlaying Card\n\n\n\nCardAttrs\n\n CardAttrs (suit:str, rank:str)\n\nPlaying Card\n\n\n\nCardDataclass\n\n CardDataclass (suit:str, rank:str)\n\nPlaying Card\n\n\n\nCardAttrs\n\n CardAttrs (suit:str, rank:str)\n\nPlaying Card"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "kedro",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "kedro",
    "section": "Install",
    "text": "Install\npip install kedro"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "kedro",
    "section": "How to use",
    "text": "How to use\nFill me in please! Don’t forget code examples:\n\nCard(1,3)\n\n3♦️\n\n\n\nCardAttrs(1,3)\n\nCardAttrs(suit=1, rank=3)\n\n\n\nCardDataclass(1,3)"
  },
  {
    "objectID": "extras.pandas.csv_dataset.html",
    "href": "extras.pandas.csv_dataset.html",
    "title": "kedro",
    "section": "",
    "text": "CSVDataSet\n\n CSVDataSet (filepath:str, load_args:Dict[str,Any]=None,\n             save_args:Dict[str,Any]=None,\n             version:kedro.io.core.Version=None,\n             credentials:Dict[str,Any]=None, fs_args:Dict[str,Any]=None)\n\nCSVDataSet loads/saves data from/to a CSV file using an underlying"
  }
]